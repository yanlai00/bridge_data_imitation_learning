# Base softlearning container that contains all softlearning requirements,
# but not the actual softlearning repo. Could be used for example when developing
# softlearning, in which case you would mount softlearning repo in to the container
# as a volume, and thus be able to modify code on the host, yet run things inside
# the container. You are encouraged to use docker-compose (docker-compose.dev.yml),
# which should allow you to setup your environment with a single one command.

FROM nvidia/cudagl:9.0-base-ubuntu16.04

MAINTAINER Kristian Hartikainen <kristian.hartikainen@gmail.com>

ARG MJKEY

ENV DEBIAN_FRONTEND="noninteractive"
ENV LANG=C.UTF-8 LC_ALL=C.UTF-8
ENV PATH /opt/conda/bin:$PATH

RUN apt-get update --fix-missing && apt-get install -y wget bzip2 ca-certificates \
    libglib2.0-0 libxext6 libsm6 libxrender1 \
    git mercurial subversion

RUN wget --quiet https://repo.anaconda.com/archive/Anaconda3-5.3.0-Linux-x86_64.sh -O ~/anaconda.sh && \
    /bin/bash ~/anaconda.sh -b -p /opt/conda && \
    rm ~/anaconda.sh && \
    ln -s /opt/conda/etc/profile.d/conda.sh /etc/profile.d/conda.sh && \
    echo ". /opt/conda/etc/profile.d/conda.sh" >> ~/.bashrc && \
    echo "conda activate base" >> ~/.bashrc

RUN apt-get install -y curl grep sed dpkg && \
    TINI_VERSION=`curl https://github.com/krallin/tini/releases/latest | grep -o "/v.*\"" | sed 's:^..\(.*\).$:\1:'` && \
    curl -L "https://github.com/krallin/tini/releases/download/v${TINI_VERSION}/tini_${TINI_VERSION}.deb" > tini.deb && \
    dpkg -i tini.deb && \
    rm tini.deb && \
    apt-get clean


RUN conda update -y --name base conda


# ========== Tensorflow dependencies ==========
RUN DEBIAN_FRONTEND="noninteractive" \
    && apt-get update \
    && apt-get install -y --no-install-recommends \
        build-essential \
        cuda-command-line-tools-9-0 \
        cuda-cublas-9-0 \
        cuda-cufft-9-0 \
        cuda-curand-9-0 \
        cuda-cusolver-9-0 \
        cuda-cusparse-9-0 \
        libcudnn7=7.2.1.38-1+cuda9.0 \
        libnccl2=2.2.13-1+cuda9.0 \
        libfreetype6-dev \
        libhdf5-serial-dev \
        libpng12-dev \
        libzmq3-dev \
        pkg-config \
        python \
        python-dev \
        rsync \
        software-properties-common \
        unzip \
        gcc \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*


# ========== Softlearning dependencies ==========
RUN apt-get update \
    # DO NOT apt-get upgrade here, it'll fuck up the tensorflow dependencies
    && apt-get install -y --no-install-recommends \
        build-essential \
        curl \
        git \
        make \
        cmake \
        swig \
        libz-dev \
        unzip \
        zlib1g-dev \
        libglfw3 \
        libglfw3-dev \
        libxrandr2 \
        libxinerama-dev \
        libxi6 \
        libxcursor-dev \
        libgl1-mesa-dev \
        libgl1-mesa-glx \
        libglew-dev \
        libosmesa6-dev \
        ack-grep \
        patchelf \
        vim \
        emacs \
        wget \
        xpra \
        xserver-xorg-dev \
        xvfb \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*



# ========= MuJoCo ===============
# Mujoco for gym and mujoco_py
ENV MUJOCO_VERSION=150 \
    MUJOCO_PATH=/root/.mujoco

RUN MUJOCO_ZIP="mjpro${MUJOCO_VERSION}_linux.zip" \
    && mkdir -p ${MUJOCO_PATH} \
    && wget -P ${MUJOCO_PATH} https://www.roboti.us/download/${MUJOCO_ZIP} \
    && unzip ${MUJOCO_PATH}/${MUJOCO_ZIP} -d ${MUJOCO_PATH} \
    && rm ${MUJOCO_PATH}/${MUJOCO_ZIP}

ENV LD_LIBRARY_PATH /root/.mujoco/mjpro${MUJOCO_VERSION}/bin:${LD_LIBRARY_PATH}


# ========== Conda Environment ==========
COPY ./environment.yml /tmp/
COPY ./requirements.txt /tmp/

# remove these packages since they conflict with the packages installed later
RUN conda remove wrapt
RUN conda remove imageio

# NOTE: Don't separate the Mujoco key echo and remove commands into separate
# run commands! Otherwise your key will be readable by anyone who has access
# To the container. We need the key in order to compile mujoco_py.
RUN echo "${MJKEY}" > /root/.mujoco/mjkey.txt \
    && sed -i -e 's/^tensorflow==/tensorflow-gpu==/g' /tmp/requirements.txt \
    && conda env update -f /tmp/environment.yml \
    && rm /root/.mujoco/mjkey.txt \
    && rm /tmp/requirements.txt \
    && rm /tmp/environment.yml

RUN echo "conda activate softlearning" >> /root/.bashrc
ENV BASH_ENV /root/.bashrc

#Hack for gpu rendering for mujoco_py
RUN mkdir -p /usr/lib/nvidia-384
ENV LD_LIBRARY_PATH ${LD_LIBRARY_PATH}:/usr/lib/nvidia-384

# =========== Container Entrypoint =============
COPY ./mj_gpu_docker/entrypoint.sh /entrypoint.sh
ENTRYPOINT ["/entrypoint.sh"]
